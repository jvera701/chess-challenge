{"version":3,"sources":["components/square/square.jsx","components/chessboard/chessboard.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Square","props","isWhite","React","createElement","className","concat","Chessboard","numberRows","numberColumns","columnsLabel","getRow","isFirstWhite","putLabel","squareRow","colorIndex","i","push","arr","Fragment","getBoard","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"2QAGe,SAASA,EAAOC,GAAO,IAC5BC,EAAYD,EAAZC,QACR,OACEC,IAAAC,cAAA,OACEC,UAAS,UAAAC,OAAYJ,EAAU,mBAAqB,4BCH3C,SAASK,IACtB,IAAMC,EAAa,EACbC,EAAgB,EAChBC,EAAe,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEzD,SAASC,EAAOC,EAAcC,GAG5B,IAFA,IAAMC,EAAY,GACZC,EAAaH,EAAe,EAAI,EAC7BI,EAAI,EAAGA,EAAIP,EAAeO,IACjCF,EAAUG,KACRd,IAAAC,cAAA,WACED,IAAAC,cAACJ,EAAM,CAACE,QAASc,EAAI,IAAMD,IAC1BF,GAAYH,EAAaM,KAIhC,OAAOF,EAgBT,OAAOX,IAAAC,cAAA,OAAKC,UAAU,WAbtB,WAEE,IADA,IAAMa,EAAM,GACHF,EAAI,EAAGA,EAAIR,EAAYQ,IAC9BE,EAAID,KACFd,IAAAC,cAAAD,IAAAgB,SAAA,KACGX,EAAaQ,EACbL,EAAOK,EAAI,IAAM,EAAGA,IAAMR,EAAa,KAI9C,OAAOU,EAGwBE,ICrBpBC,MAVf,WACE,OACElB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAQC,UAAU,cAChBF,IAAAC,cAACG,EAAU,SCGJe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,IAAAC,cAACD,IAAMqC,WAAU,KACfrC,IAAAC,cAACiB,EAAG,QAORC","file":"static/js/main.0aa58a15.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./square.styles.css\";\n\nexport default function Square(props) {\n  const { isWhite } = props;\n  return (\n    <div\n      className={`square ${isWhite ? \"white-background\" : \"black-background\"}`}\n    ></div>\n  );\n}\n","import React from \"react\";\nimport \"./chessboard.styles.css\";\nimport Square from \"../square/square\";\n\nexport default function Chessboard() {\n  const numberRows = 8;\n  const numberColumns = 8;\n  const columnsLabel = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\n\n  function getRow(isFirstWhite, putLabel) {\n    const squareRow = [];\n    const colorIndex = isFirstWhite ? 0 : 1;\n    for (let i = 0; i < numberColumns; i++) {\n      squareRow.push(\n        <div>\n          <Square isWhite={i % 2 === colorIndex} />\n          {putLabel && columnsLabel[i]}\n        </div>\n      );\n    }\n    return squareRow;\n  }\n\n  function getBoard() {\n    const arr = [];\n    for (let i = 0; i < numberRows; i++) {\n      arr.push(\n        <>\n          {numberRows - i}\n          {getRow(i % 2 === 0, i === numberRows - 1)}\n        </>\n      );\n    }\n    return arr;\n  }\n\n  return <div className=\"wrapper\">{getBoard()}</div>;\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Square from \"./components/square/square.jsx\";\nimport Chessboard from \"./components/chessboard/chessboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chessboard />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}